[{"/Users/deeptej/Desktop/react/texx/client/src/index.js":"1","/Users/deeptej/Desktop/react/texx/client/src/components/reportWebVitals.js":"2","/Users/deeptej/Desktop/react/texx/client/src/components/App.js":"3","/Users/deeptej/Desktop/react/texx/client/src/components/Post.js":"4","/Users/deeptej/Desktop/react/texx/client/src/components/Sidebar.js":"5","/Users/deeptej/Desktop/react/texx/client/src/components/firebase.js":"6","/Users/deeptej/Desktop/react/texx/client/src/components/Widgets.js":"7","/Users/deeptej/Desktop/react/texx/client/src/components/ImageUpload.js":"8","/Users/deeptej/Desktop/react/texx/client/src/components/SidebarOptions.js":"9","/Users/deeptej/Desktop/react/texx/client/src/components/chat/Message.js":"10","/Users/deeptej/Desktop/react/texx/client/src/components/chat/WidgetsChat.js":"11","/Users/deeptej/Desktop/react/texx/client/src/components/Feed.js":"12","/Users/deeptej/Desktop/react/texx/client/src/components/chat/Chat.js":"13","/Users/deeptej/Desktop/react/texx/client/src/contexts/StateProvider.js":"14","/Users/deeptej/Desktop/react/texx/client/src/contexts/reducer.js":"15","/Users/deeptej/Desktop/react/texx/client/src/components/chat/WigetsDummy.js":"16","/Users/deeptej/Desktop/react/texx/client/src/components/chat/SendMessage.js":"17","/Users/deeptej/Desktop/react/texx/client/src/components/Event.js":"18","/Users/deeptej/Desktop/react/texx/client/src/components/Profile.js":"19"},{"size":730,"mtime":1618602690657,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1617957038337,"results":"22","hashOfConfig":"21"},{"size":14253,"mtime":1619963460943,"results":"23","hashOfConfig":"21"},{"size":22910,"mtime":1619966466797,"results":"24","hashOfConfig":"21"},{"size":1744,"mtime":1619941748656,"results":"25","hashOfConfig":"21"},{"size":951,"mtime":1618496473804,"results":"26","hashOfConfig":"21"},{"size":1160,"mtime":1619024742823,"results":"27","hashOfConfig":"21"},{"size":6010,"mtime":1619961955597,"results":"28","hashOfConfig":"21"},{"size":415,"mtime":1619523406365,"results":"29","hashOfConfig":"21"},{"size":1942,"mtime":1619251378679,"results":"30","hashOfConfig":"21"},{"size":10644,"mtime":1619937941917,"results":"31","hashOfConfig":"21"},{"size":1498,"mtime":1619961999297,"results":"32","hashOfConfig":"21"},{"size":1700,"mtime":1619447661152,"results":"33","hashOfConfig":"21"},{"size":462,"mtime":1619431538338,"results":"34","hashOfConfig":"21"},{"size":639,"mtime":1619430467561,"results":"35","hashOfConfig":"21"},{"size":1657,"mtime":1619024760560,"results":"36","hashOfConfig":"21"},{"size":1814,"mtime":1619538390365,"results":"37","hashOfConfig":"21"},{"size":3815,"mtime":1619599504214,"results":"38","hashOfConfig":"21"},{"size":5139,"mtime":1619971831855,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1caugyp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/deeptej/Desktop/react/texx/client/src/index.js",[],["85","86"],"/Users/deeptej/Desktop/react/texx/client/src/components/reportWebVitals.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/App.js",["87","88","89","90","91"],"/Users/deeptej/Desktop/react/texx/client/src/components/Post.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"/Users/deeptej/Desktop/react/texx/client/src/components/Sidebar.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/firebase.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/Widgets.js",["111"],"import React from 'react'\nimport './Widgets.css'\nimport { Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport WidgetsChat from './chat/WidgetsChat'\nimport WigetsDummy from './chat/WigetsDummy'\nimport {useStateValue} from '../contexts/StateProvider'\n\nfunction Widgets() {\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n\n    return (\n        <div className=\"widgets\"> \n            <div className=\"widgets__inputBox\">\n                <SearchIcon className=\"widgets__searchIcon\"/>\n                <Input style={{color:\"aliceblue\"}} className=\"widgets__input\" type= \"text\" placeholder=\"Search Texx\" />\n            </div>\n            <div className=\"widgets___widgetContainer\">\n                {/* if user doesnt exists WidgetsChat component wasthrwoing an error hence I Made a fummy component which doesnt have a user object and \n                will be rendered during refresh transitions when momentarily user is unavailable instead of throwing an error  */}\n                {user?(<WidgetsChat/>):(<WigetsDummy/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Widgets\n","/Users/deeptej/Desktop/react/texx/client/src/components/ImageUpload.js",["112","113"],"/Users/deeptej/Desktop/react/texx/client/src/components/SidebarOptions.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/chat/Message.js",["114"],"//structure of standard message\nimport React,{ forwardRef } from 'react';//forwardRef keeps track of what is changing\nimport {Card,Avatar,CardContent,Typography} from '@material-ui/core';\nimport './Message.css';\n\n//====================================================================================================\nconst Message =  forwardRef(({},ref) => {\n    //boolean isUser to check whether the user is same as the one logged in \n    // const isUser = username === message.username \n    const isUser = true;\n    return (\n        //apply message__user class only if isUser is True\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\n            {/*if isUser True then apply 'message_userCard' else apply 'message_guestCard'*/}\n            <Card className={isUser ? 'message_userCard': 'message_guestCard' }>\n                <div className=\"message__header\">\n                    <Avatar className=\"message__avatar\" alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                    <Typography className=\"message__username\" variant=\"h\">\n                        {isUser ?`${'You'}`: \"message.username\" || 'Unknown user'}\n                    </Typography>\n                </div>\n                <CardContent>\n                    <Typography className=\"message__message\" color=\"#E6E6E6\" variant=\"h5\" component=\"h2\">\n                        {\"message.message\"}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n        )\n    \n})\n\nexport default Message;","/Users/deeptej/Desktop/react/texx/client/src/components/chat/WidgetsChat.js",["115","116","117","118","119","120"],"/Users/deeptej/Desktop/react/texx/client/src/components/Feed.js",["121"],"/Users/deeptej/Desktop/react/texx/client/src/components/chat/Chat.js",["122","123","124","125","126"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Message from './Message'\nimport './Chat.css'\nimport {DataBase} from '../firebase';\nimport {useStateValue} from '../../contexts/StateProvider';\n\n\n\nfunction Chat() {\n    //set the chat name in the\n    const [chatName,setChatName] = useState('')\n    //get the messages from the database\n    const [messages,setMessages] = useState([])\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n    const {chatId} = useParams()\n\n\n\n//======================================================GET Messages==========================================\n//everytime chat_user_id (which is basically the doc id inside the chat collection) changes pull the messages for that chat_user_id from the database\nuseEffect(() => {\n    if (user){\n    if (chatId){\n        //here the chat_user_id is taken from the user who posted that particular post to database\n        const unsubscribe = DataBase.collection('users').doc(user.uid).collection('chats').doc(chatId).collection('messages').onSnapshot((snapshot)=>(\n            setMessages(snapshot.data())\n        ))\n    }\n}\n    \n}, [chatId])\n\n\n//=============================================================================================================\n\n    return (                         \n             <div className=\"chat\">\n                <div className=\"chat__header\">\n                This is the beggining of your texx with {}\n                </div>\n                {\n                    messages.map((message)=>(<Message message={message}/>))\n                    \n                }\n             </div> \n\n\n    )\n}\n\nexport default Chat\n","/Users/deeptej/Desktop/react/texx/client/src/contexts/StateProvider.js",[],"/Users/deeptej/Desktop/react/texx/client/src/contexts/reducer.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/chat/WigetsDummy.js",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"\n//users in sidebar chat (online/offline)\n\nimport React, { useEffect, useState } from 'react'\nimport './WidgetsDummy.css'\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport {ButtonBase} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport {DataBase} from '../firebase'\nimport firebase from 'firebase/app';\nimport {useStateValue} from '../../contexts/StateProvider';\nimport { Unsubscribe } from '@material-ui/icons';\n//==================================================Card Styles==============================================\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    minWidth: 250,\n    height:60,\n    background: '#1A1A1A',\n    '&:hover': {\n       background: '#363A3E',\n    },\n    border:'1px grey',\n    marginBottom:'5px',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    Bottom:'20px',\n    fontWeight:300,\n    color: 'white',\n    marginBottom:10,\n  },\n  avatar:{\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    marginTop:10,\n    marginLeft:10,\n    marginBottom:10,\n  },\n  typoStatus:{\n    color:'grey',\n  }\n\n}));\n//==================================================================================================================\nfunction WidgetsDummy() {\n\n    return (\n\n        <div className=\"widgetsChat\">\n            \n        </div>\n    )\n}\n\nexport default WidgetsDummy\n","/Users/deeptej/Desktop/react/texx/client/src/components/chat/SendMessage.js",["142","143"],"import React, { useState } from 'react'\nimport { Input } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport firebase from 'firebase/app'\nimport {useStateValue} from '../../contexts/StateProvider';\nimport {InsertEmoticon, MicOutlined} from '@material-ui/icons';\nimport {DataBase} from '../firebase';\nimport { useParams } from 'react-router-dom';\nimport './SendMessage.css'\n\nfunction SendMessage(chatId) {\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n    //set the input \n    const [input, setInput] = useState('');\n  \n//========================================================POST Messages========================================\n\n\n    const sendMessage = () => {\n        if (user){\n            DataBase.collection('users').doc(user.uid).collection('chats').doc(chatId).collection('messages').add(\n                {\n                    text:input,\n                    timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n                    author:user.uid,\n                    authorName:user.displayName,\n                    imageUrl:\"\",\n                }\n            )\n            setInput('');\n        }\n    }\n\n//=============================================================================================================\n    return (\n    <div className=\"sendMessage\">\n            <form className=\"chat__inputForm\" onSubmit={(e)=>{e.preventDefault()}}>\n                <InsertEmoticon/>\n                <Input style={{color:\"aliceblue\"}} className=\"sendMessage__input\" value={input} onChange={(e)=>setInput(e.target.value)} type=\"text\" placeholder=\"   Send a texx...\"/>\n                <SendIcon onClick={sendMessage} type=\"submit\"/>\n                <MicOutlined/>\n            </form>\n    </div>\n    )\n}\n\nexport default SendMessage\n","/Users/deeptej/Desktop/react/texx/client/src/components/Event.js",["144"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './Event.css'\nimport { Paper } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor:\"#2E3336\",\n  },\n  media: {\n    height: 140,\n  },\n});\nfunction Event() {\n    const classes = useStyles();\n    return (\n        <div className=\"event\">\n            <div className=\"event__header\">\n                <div className=\"event__headerInfo\">\n                    <Typography className=\"event__title\"  variant=\"h5\">\n                        {\"Event Title\"}\n                    </Typography>\n                    <Typography  className=\"event__date\">\n                        {\"Date\"}\n                    </Typography>\n                    <Typography  className=\"event__time\">\n                        {\"Time\"}\n                    </Typography>\n                    <Typography  className=\"event__location\">\n                        {\"Location/Link\"}\n                    </Typography>\n                </div>\n                <MoreVertIcon style={{color:'white'}}/>\n            </div>\n            <Card className={classes.root}>\n\n                <div className=\"event__thubnail\">\n                    <CardActionArea>\n                        <CardMedia\n                        className={classes.media}\n                        image={\"Event Image\"}\n                        title={\"Event Title\"}\n                        />\n                    </CardActionArea>\n                </div>\n\n                <CardContent className=\"event__description\">\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {\"Event short description\"}\n                    </Typography>\n                </CardContent>\n\n                <div className=\"event__footer\">\n                    <CardActions className=\"event__interested\">\n                        <Button size=\"small\" >    \n                                I am Interested\n                        </Button>\n                    </CardActions>\n    \n                    <CardActions className=\"event__actions\">\n                            <Button size=\"small\" onClick={() => {\n                                            if (navigator.share) {\n                                                navigator.share({\n                                                        title: document.title,\n                                                        text: \"Event short description\",\n                                                        url: window.location.href,\n                                                    })\n                                                    .then(() => console.log('Successful share'))\n                                                    .catch((error) => alert('Error sharing', error));\n                                            } else {\n                                                alert(\"Web Share API is not supported in your browser.\")\n                                            }\n                                        }} >\n                            Share with friends\n                            </Button>\n                            <Button size=\"small\" >\n                            Learn More\n                            </Button>\n                    </CardActions>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Event\n\n\n","/Users/deeptej/Desktop/react/texx/client/src/components/Profile.js",["145","146","147","148","149","150","151","152","153","154","155"],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":45,"nodeType":"162","messageId":"163","endLine":1,"endColumn":49},{"ruleId":"160","severity":1,"message":"164","line":12,"column":8,"nodeType":"162","messageId":"163","endLine":12,"endColumn":12},{"ruleId":"160","severity":1,"message":"165","line":27,"column":8,"nodeType":"162","messageId":"163","endLine":27,"endColumn":13},{"ruleId":"160","severity":1,"message":"166","line":28,"column":8,"nodeType":"162","messageId":"163","endLine":28,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":94,"column":28,"nodeType":"169","endLine":94,"endColumn":56},{"ruleId":"160","severity":1,"message":"170","line":3,"column":36,"nodeType":"162","messageId":"163","endLine":3,"endColumn":46},{"ruleId":"160","severity":1,"message":"171","line":12,"column":8,"nodeType":"162","messageId":"163","endLine":12,"endColumn":19},{"ruleId":"160","severity":1,"message":"172","line":36,"column":20,"nodeType":"162","messageId":"163","endLine":36,"endColumn":28},{"ruleId":"160","severity":1,"message":"173","line":46,"column":12,"nodeType":"162","messageId":"163","endLine":46,"endColumn":27},{"ruleId":"160","severity":1,"message":"174","line":46,"column":29,"nodeType":"162","messageId":"163","endLine":46,"endColumn":47},{"ruleId":"160","severity":1,"message":"175","line":48,"column":12,"nodeType":"162","messageId":"163","endLine":48,"endColumn":25},{"ruleId":"160","severity":1,"message":"176","line":48,"column":26,"nodeType":"162","messageId":"163","endLine":48,"endColumn":42},{"ruleId":"160","severity":1,"message":"177","line":49,"column":12,"nodeType":"162","messageId":"163","endLine":49,"endColumn":21},{"ruleId":"160","severity":1,"message":"178","line":49,"column":22,"nodeType":"162","messageId":"163","endLine":49,"endColumn":34},{"ruleId":"160","severity":1,"message":"179","line":60,"column":12,"nodeType":"162","messageId":"163","endLine":60,"endColumn":21},{"ruleId":"160","severity":1,"message":"180","line":60,"column":22,"nodeType":"162","messageId":"163","endLine":60,"endColumn":34},{"ruleId":"160","severity":1,"message":"181","line":82,"column":13,"nodeType":"162","messageId":"163","endLine":82,"endColumn":32},{"ruleId":"182","severity":1,"message":"183","line":160,"column":3,"nodeType":"184","messageId":"185","endLine":160,"endColumn":18},{"ruleId":"167","severity":1,"message":"186","line":199,"column":11,"nodeType":"184","endLine":199,"endColumn":31,"suggestions":"187"},{"ruleId":"182","severity":1,"message":"183","line":199,"column":11,"nodeType":"184","messageId":"185","endLine":199,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":268,"column":53,"nodeType":"190","messageId":"191","endLine":268,"endColumn":55},{"ruleId":"167","severity":1,"message":"192","line":294,"column":3,"nodeType":"184","endLine":294,"endColumn":17,"suggestions":"193"},{"ruleId":"182","severity":1,"message":"183","line":294,"column":3,"nodeType":"184","messageId":"185","endLine":294,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":337,"column":36,"nodeType":"190","messageId":"191","endLine":337,"endColumn":38},{"ruleId":"160","severity":1,"message":"172","line":11,"column":20,"nodeType":"162","messageId":"163","endLine":11,"endColumn":28},{"ruleId":"160","severity":1,"message":"170","line":1,"column":24,"nodeType":"162","messageId":"163","endLine":1,"endColumn":34},{"ruleId":"160","severity":1,"message":"172","line":13,"column":20,"nodeType":"162","messageId":"163","endLine":13,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":7,"column":30,"nodeType":"196","messageId":"191","endLine":7,"endColumn":32},{"ruleId":"160","severity":1,"message":"197","line":7,"column":22,"nodeType":"162","messageId":"163","endLine":7,"endColumn":30},{"ruleId":"160","severity":1,"message":"198","line":15,"column":8,"nodeType":"162","messageId":"163","endLine":15,"endColumn":16},{"ruleId":"160","severity":1,"message":"199","line":18,"column":10,"nodeType":"162","messageId":"163","endLine":18,"endColumn":21},{"ruleId":"160","severity":1,"message":"200","line":59,"column":12,"nodeType":"162","messageId":"163","endLine":59,"endColumn":20},{"ruleId":"160","severity":1,"message":"201","line":59,"column":22,"nodeType":"162","messageId":"163","endLine":59,"endColumn":33},{"ruleId":"167","severity":1,"message":"202","line":80,"column":8,"nodeType":"184","endLine":80,"endColumn":14,"suggestions":"203"},{"ruleId":"160","severity":1,"message":"172","line":10,"column":16,"nodeType":"162","messageId":"163","endLine":10,"endColumn":24},{"ruleId":"160","severity":1,"message":"204","line":12,"column":12,"nodeType":"162","messageId":"163","endLine":12,"endColumn":20},{"ruleId":"160","severity":1,"message":"205","line":12,"column":21,"nodeType":"162","messageId":"163","endLine":12,"endColumn":32},{"ruleId":"160","severity":1,"message":"172","line":16,"column":20,"nodeType":"162","messageId":"163","endLine":16,"endColumn":28},{"ruleId":"160","severity":1,"message":"206","line":27,"column":15,"nodeType":"162","messageId":"163","endLine":27,"endColumn":26},{"ruleId":"167","severity":1,"message":"207","line":33,"column":4,"nodeType":"184","endLine":33,"endColumn":12,"suggestions":"208"},{"ruleId":"160","severity":1,"message":"209","line":4,"column":17,"nodeType":"162","messageId":"163","endLine":4,"endColumn":26},{"ruleId":"160","severity":1,"message":"210","line":4,"column":28,"nodeType":"162","messageId":"163","endLine":4,"endColumn":36},{"ruleId":"160","severity":1,"message":"211","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":13},{"ruleId":"160","severity":1,"message":"197","line":7,"column":22,"nodeType":"162","messageId":"163","endLine":7,"endColumn":30},{"ruleId":"160","severity":1,"message":"212","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":12},{"ruleId":"160","severity":1,"message":"213","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":19},{"ruleId":"160","severity":1,"message":"214","line":10,"column":8,"nodeType":"162","messageId":"163","endLine":10,"endColumn":18},{"ruleId":"160","severity":1,"message":"215","line":11,"column":8,"nodeType":"162","messageId":"163","endLine":11,"endColumn":14},{"ruleId":"160","severity":1,"message":"216","line":12,"column":9,"nodeType":"162","messageId":"163","endLine":12,"endColumn":19},{"ruleId":"160","severity":1,"message":"217","line":13,"column":9,"nodeType":"162","messageId":"163","endLine":13,"endColumn":13},{"ruleId":"160","severity":1,"message":"218","line":14,"column":9,"nodeType":"162","messageId":"163","endLine":14,"endColumn":17},{"ruleId":"160","severity":1,"message":"198","line":15,"column":8,"nodeType":"162","messageId":"163","endLine":15,"endColumn":16},{"ruleId":"160","severity":1,"message":"219","line":16,"column":9,"nodeType":"162","messageId":"163","endLine":16,"endColumn":22},{"ruleId":"160","severity":1,"message":"199","line":17,"column":10,"nodeType":"162","messageId":"163","endLine":17,"endColumn":21},{"ruleId":"160","severity":1,"message":"220","line":19,"column":7,"nodeType":"162","messageId":"163","endLine":19,"endColumn":16},{"ruleId":"160","severity":1,"message":"221","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":19},{"ruleId":"160","severity":1,"message":"172","line":13,"column":20,"nodeType":"162","messageId":"163","endLine":13,"endColumn":28},{"ruleId":"160","severity":1,"message":"222","line":11,"column":10,"nodeType":"162","messageId":"163","endLine":11,"endColumn":15},{"ruleId":"160","severity":1,"message":"223","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":12},{"ruleId":"160","severity":1,"message":"224","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":18},{"ruleId":"160","severity":1,"message":"225","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":17},{"ruleId":"160","severity":1,"message":"226","line":8,"column":8,"nodeType":"162","messageId":"163","endLine":8,"endColumn":19},{"ruleId":"160","severity":1,"message":"227","line":9,"column":8,"nodeType":"162","messageId":"163","endLine":9,"endColumn":16},{"ruleId":"160","severity":1,"message":"228","line":13,"column":10,"nodeType":"162","messageId":"163","endLine":13,"endColumn":13},{"ruleId":"160","severity":1,"message":"229","line":14,"column":8,"nodeType":"162","messageId":"163","endLine":14,"endColumn":20},{"ruleId":"160","severity":1,"message":"230","line":15,"column":8,"nodeType":"162","messageId":"163","endLine":15,"endColumn":17},{"ruleId":"160","severity":1,"message":"231","line":16,"column":8,"nodeType":"162","messageId":"163","endLine":16,"endColumn":22},{"ruleId":"160","severity":1,"message":"172","line":51,"column":20,"nodeType":"162","messageId":"163","endLine":51,"endColumn":28},{"ruleId":"167","severity":1,"message":"232","line":71,"column":6,"nodeType":"184","endLine":71,"endColumn":12,"suggestions":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Feed' is defined but never used.","'Event' is defined but never used.","'Profile' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'userFromLocalStorage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useContext' is defined but never used.","'PublishIcon' is defined but never used.","'dispatch' is assigned a value but never used.","'favouritesColor' is assigned a value but never used.","'setfavouritesColor' is assigned a value but never used.","'firstTimeLike' is assigned a value but never used.","'setFirstTimeLike' is assigned a value but never used.","'likeColor' is assigned a value but never used.","'setLikeColor' is assigned a value but never used.","'likeCount' is assigned a value but never used.","'setLikeCount' is assigned a value but never used.","'checkLengthOfObject' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","React Hook useEffect has missing dependencies: 'chats_array' and 'user_id'. Either include them or remove the dependency array. If 'setIsPresent' needs the current value of 'user_id', you can also switch to useReducer instead of useState and read 'user_id' in the reducer.",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'like' and 'likes'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLike' needs the current value of 'likes'.",["237"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useTheme' is defined but never used.","'firebase' is defined but never used.","'Unsubscribe' is defined but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chats'. Either include it or remove the dependency array.",["238"],"'chatName' is assigned a value but never used.","'setChatName' is assigned a value but never used.","'unsubscribe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["239"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Badge' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.","'ButtonBase' is defined but never used.","'Link' is defined but never used.","'DataBase' is defined but never used.","'useStateValue' is defined but never used.","'useStyles' is assigned a value but never used.","'useParams' is defined but never used.","'Paper' is defined but never used.","'clsx' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [postId, chats, user, user_id, chats_array]",{"range":"251","text":"252"},"Update the dependencies array to be: [like, likes, postId, user]",{"range":"253","text":"254"},"Update the dependencies array to be: [chats, user]",{"range":"255","text":"256"},"Update the dependencies array to be: [chatId, user]",{"range":"257","text":"258"},"Update the dependencies array to be: [user, userInfo]",{"range":"259","text":"260"},[8672,8692],"[postId, chats, user, user_id, chats_array]",[13296,13310],"[like, likes, postId, user]",[2545,2551],"[chats, user]",[1187,1195],"[chatId, user]",[2504,2510],"[user, userInfo]"]