[{"/Users/deeptej/Desktop/react/texx/client/src/index.js":"1","/Users/deeptej/Desktop/react/texx/client/src/components/reportWebVitals.js":"2","/Users/deeptej/Desktop/react/texx/client/src/components/App.js":"3","/Users/deeptej/Desktop/react/texx/client/src/components/Post.js":"4","/Users/deeptej/Desktop/react/texx/client/src/components/Sidebar.js":"5","/Users/deeptej/Desktop/react/texx/client/src/components/firebase.js":"6","/Users/deeptej/Desktop/react/texx/client/src/components/Widgets.js":"7","/Users/deeptej/Desktop/react/texx/client/src/components/ImageUpload.js":"8","/Users/deeptej/Desktop/react/texx/client/src/components/SidebarOptions.js":"9","/Users/deeptej/Desktop/react/texx/client/src/components/chat/Message.js":"10","/Users/deeptej/Desktop/react/texx/client/src/components/chat/WidgetsChat.js":"11","/Users/deeptej/Desktop/react/texx/client/src/components/Feed.js":"12","/Users/deeptej/Desktop/react/texx/client/src/components/chat/Chat.js":"13","/Users/deeptej/Desktop/react/texx/client/src/contexts/StateProvider.js":"14","/Users/deeptej/Desktop/react/texx/client/src/contexts/reducer.js":"15","/Users/deeptej/Desktop/react/texx/client/src/components/chat/WigetsDummy.js":"16","/Users/deeptej/Desktop/react/texx/client/src/components/chat/SendMessage.js":"17","/Users/deeptej/Desktop/react/texx/client/src/components/Event.js":"18","/Users/deeptej/Desktop/react/texx/client/src/components/Profile.js":"19"},{"size":730,"mtime":1618602690657,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1617957038337,"results":"22","hashOfConfig":"21"},{"size":13115,"mtime":1619622110961,"results":"23","hashOfConfig":"21"},{"size":22720,"mtime":1619896810039,"results":"24","hashOfConfig":"21"},{"size":1561,"mtime":1619523020965,"results":"25","hashOfConfig":"21"},{"size":951,"mtime":1618496473804,"results":"26","hashOfConfig":"21"},{"size":1160,"mtime":1619024742823,"results":"27","hashOfConfig":"21"},{"size":5976,"mtime":1619896236152,"results":"28","hashOfConfig":"21"},{"size":415,"mtime":1619523406365,"results":"29","hashOfConfig":"21"},{"size":1942,"mtime":1619251378679,"results":"30","hashOfConfig":"21"},{"size":10590,"mtime":1619543601210,"results":"31","hashOfConfig":"21"},{"size":1460,"mtime":1619896174765,"results":"32","hashOfConfig":"21"},{"size":1700,"mtime":1619447661152,"results":"33","hashOfConfig":"21"},{"size":462,"mtime":1619431538338,"results":"34","hashOfConfig":"21"},{"size":639,"mtime":1619430467561,"results":"35","hashOfConfig":"21"},{"size":1657,"mtime":1619024760560,"results":"36","hashOfConfig":"21"},{"size":1814,"mtime":1619538390365,"results":"37","hashOfConfig":"21"},{"size":3815,"mtime":1619599504214,"results":"38","hashOfConfig":"21"},{"size":4316,"mtime":1619621775218,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1caugyp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"/Users/deeptej/Desktop/react/texx/client/src/index.js",[],["88","89"],"/Users/deeptej/Desktop/react/texx/client/src/components/reportWebVitals.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/App.js",["90","91","92"],"import {useState,useEffect} from 'react';\nimport './App.css';\nimport {auth, DataBase} from './firebase'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Modal from '@material-ui/core/Modal'\nimport { Button, Input, Paper } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport Sidebar from './Sidebar';\nimport Widgets from './Widgets';\nimport { BrowserRouter as Router ,Link} from 'react-router-dom'\nimport {Route,Switch} from 'react-router-dom'\nimport Feed from './Feed'\nimport Chat from './chat/Chat'\nimport {useStateValue} from '../contexts/StateProvider';\nimport { actionTypes } from '../contexts/reducer';\nimport firebase from 'firebase/app'\nimport SendMessage from './chat/SendMessage'\n//Get material-ui icons\nimport SidebarOptions from './SidebarOptions'\nimport SearchIcon from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport Event from './Event'\nimport Profile from './Profile'\n\n//====================================Modal styles=========================================\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50 ;  \n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor:'#2E3336',\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    color:'white'\n  },\n  root: {\n  display: 'flex',\n  objectFit: 'contain',\n  backgroundColor: '#363A3E',\n  padding: '20px',\n  position: 'sticky',\n  zIndex: 100,\n   \n}  \n\n}));\n//========================================================================================================\nfunction App() {\n  //dispatch for the user\n  const [{chatId,chatInput},dispatch] = useStateValue();\n  console.log(chatId,chatInput)\n  const classes = useStyles();\n\n  const [modalStyle] = useState(getModalStyle);\n  //initially unless fired dont show the model for sign in\n  const [openSignIn,setOpenSignIn] = useState(false);\n  //initially unless fired dont show the model for sign up\n  const [open,setOpen] = useState(false);\n  //for requiring sign in/sign up to upload\n  const [openRequired,setOpenRequired] = useState(false)\n  //store username of the person who wrote the post\n  const [username,setUsername] = useState('');\n  //store email\n  const [email,setEmail] = useState('');\n  //store password\n  const [password,setPassword] = useState('');\n  //store bio\n  const [bio,setBio] = useState('');\n  //flag to keep track of whether the user has logged in or not (user who's signed in )\n  const [user,setUser] = useState(null);\n  //user stored in local storage\n  let userFromLocalStorage\n\n//====================================Get the user from the local storage on refresh======================\n  useEffect(()=>{\n\n    userFromLocalStorage = localStorage.getItem('user')\n    //if there is a user object saved in local storage then set it equal to 'user'\n    if (userFromLocalStorage){\n      //JSON.parse will convert stringify to JSON\n      setUser(JSON.parse(userFromLocalStorage))\n      console.log(JSON.parse(userFromLocalStorage))\n      try {\n        \n        dispatch(\n            {\n            type:actionTypes.SET_USER,\n            user:JSON.parse(userFromLocalStorage)\n            }\n          )\n        \n        \n      }\n    \n    catch (err){\n      alert(err.message)\n    }\n  }\n  },[])\n\n//====================================Authorization state listner=========================================\n  useEffect(()=>{\n    //onAuthStateChanged = listnser to changes in authorization state\n    //when user is logged in or logged out or is changed\n    const unsubscribe = auth.onAuthStateChanged((authUser)=>{\n    //if user has logged in \n    if (authUser){\n      console.log(authUser)\n      //capture the user inside the auth state in the 'setuser' variable\n\n      //=============survive the refresh================\n      //you can only store string items in local storage\n\n      localStorage.setItem('user',JSON.stringify(authUser))\n\n\n      setUser(authUser)\n    }\n    // else if user has logged out set user to null\n    else{\n      setUser(null)\n    }\n\n  })\n  return () =>{\n    //perform cleanup before re-firing the useEffect\n    unsubscribe();\n  }\n\n},[user,username])\n//sign up inside sign in\nconst handleSignUp= () => {\n  setOpen(true)\n  setOpenSignIn(false)\n\n}\n//====================================sign in the user=========================================\n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(email,password)\n    .then((result)=>{\n      dispatch(\n          {\n          type:actionTypes.SET_USER,\n          user:result.user\n          }\n        );\n      localStorage.setItem('user',JSON.stringify(result.user))\n\n    //empty the fields\n    setEmail('')\n    setPassword('')\n\n    })\n    .catch((error) => { alert(error.message)})\n    //close the model\n    setOpenSignIn(false)\n    \n  }\n//====================================sign up the user=========================================\n//bug:requires sign in after sign up\n  const signUp = (e) => {\n    e.preventDefault();\n    auth.createUserWithEmailAndPassword(email,password)\n    //createUserWithEmailAndPassword will create a user object \n    .then(function(authUser){\n        authUser.user.updateProfile({\n        //set displayname attribute of user object to username\n        displayName:username\n      }).then((result)=>{\n          console.log(result)\n          //added the newly created user to our database\n          DataBase.collection('users').doc(authUser.user.uid).set({\n            email:authUser.user.email,\n            displayName:authUser.user.displayName,\n            bio:bio,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n           })\n          })\n                    })\n    .catch((error)=>{alert(error.message+\"from dispatch signup\")})\n\n    setOpen(false)\n  }\n//==================================================Log out =======================================\nconst logout = () => {\n//remove the user from the local storage\n// localStorage.setItem('user','null')\nauth.signOut().then(() => {\n  console.log(\"sucessfully singned out\")\n}).catch((error) => {\n  alert(error.message)\n});\n}\n//===============================================================================================\n  return (\n    <div className=\"app\">\n       \n                                      {/*Modal for sign up*/}\n      <Modal  open={open} onClose={()=>{setOpen(false)}}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              {/* <img  className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\" alt=\"ig-logo\"/>   */}\n            </center>\n            <Input style ={{color:'aliceblue'}} placeholder=\"username\" type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)}/>\n            <Input style ={{color:'aliceblue'}} placeholder=\"email\" type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n            <Input style ={{color:'aliceblue'}} placeholder=\"password\" type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n            <Input style ={{color:'aliceblue'}} placeholder=\"Add your biography\" type=\"text\" value={bio} onChange={(e)=>setBio(e.target.value)}/>\n            <Button style ={{color:'aliceblue'}} onClick={signUp}>Sign up</Button>\n          </form>\n        </div>\n      </Modal>\n\n                                        {/*Modal for sign in*/}\n\n                                     {/*if user is not logged in then keep sign in modal open*/}\n                                     {/*if the user chooses sign up option then close the sign in modal*/}\n      <Modal  open={open?false:(!user?true : openSignIn)} onClose={()=>{setOpenSignIn(false)}}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n                TEXX-IMAGE\n            </center>\n            <p style={{margin:'10px'}} >Enter your credentials to Log in to texx</p>\n            <Input style ={{color:'aliceblue',margin:'10px'}} placeholder=\"email\" type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n            <Input style ={{color:'aliceblue',margin:'10px'}} placeholder=\"password\" type=\"text\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n            <Button style ={{color:'aliceblue',backgroundColor:'#556AB5'}} onClick={signIn}>Sign In</Button>\n            <p style={{margin:'10px'}}>New to texx? Sign up</p>\n            <Button style ={{color:'aliceblue',backgroundColor:'#556AB5'}} onClick={handleSignUp}>Sign up</Button>\n          </form>\n        </div>\n      </Modal>\n\n                                              {/*header*/}\n      <Paper className={classes.root} elevation={3}>\n          <div className=\"app__header\">\n              {/* <img className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\" alt=\"ig-logo\"/> */}\n              <Router>\n                <Link to=\"/\"><h1>Texx</h1></Link>\n              </Router>\n\n                                                {/*sign up/sign in or log out the user*/}\n              { user ?\n                //if user is not null(logged in) then give log out button\n              <Button onClick={logout}>Log out</Button>:\n                //else null (logged out) then give sign in or sign out button\n              <div className=\"app__loginContainer\">\n        \n              </div>\n              }\n          </div>\n      </Paper>\n      <div className=\"app__sidebarMobile\">\n            {/*pass icons as props to SidebarOptions component*/}\n            {/*keep i captial of Icon to let react know you are passing a component*/}\n            <SidebarOptions active  Icon={HomeIcon}></SidebarOptions>\n            <SidebarOptions  Icon={SearchIcon}/>\n            <SidebarOptions  Icon={NotificationsNoneIcon}/>\n            {/*when you click this show widgets*/}\n            <SidebarOptions  Icon={PermIdentityIcon}/>\n            <SidebarOptions  Icon={ListAltIcon}/>\n            <SidebarOptions  Icon={BookmarkBorderIcon}/>\n            <SidebarOptions  Icon={MoreHorizIcon}/>\n        </div>\n                                                {/*sidebar*/}\n                           {/* if user does not exists then reduce the opacity of the body */}\n      <div className={user?'app__body':'app__bodyUserNotLoggedIn' }>\n\n          <Sidebar/>\n\n{/* =================================================REACT ROUTER COMES HERE================================================================================= */}\n\n                <Router>\n                    <Switch>             \n                        <Route exact path=\"/\">\n                          <div className=\"app__feed\">\n                             <Feed/>\n                          </div>     \n                        </Route>                                                                                                               \n                        <Route path=\"/chats/:chatId\">\n                          <div className=\"app__chat\">\n                              <Chat/>\n                          </div>\n                          </Route>  \n                    </Switch>\n                </Router>\n\n{/* ======================================================================================================================================================= */}\n\n                              {/*show image upload only if the user is logged in*/}\n\n          {/*\\used otional so it won't crash if these is no 'user.displayName' at the start and use 'user' instead */}\n          {user?.displayName ?\n          //if logged in show image upload button\n          \n          (chatInput?(<SendMessage chatId={chatId}/>):(<ImageUpload username={user.displayName}/>)):\n          //else show sign in /sign up\n          (<Modal  open={openRequired} onClose={()=>{setOpenRequired(false)}}>\n            <div style={modalStyle} className={classes.paper}>\n              <form className=\"app__signup\">\n                <center>\n                  <img  className=\"app__headerImage\" src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo-2x.png/1b47f9d0e595.png\" alt=\"ig-logo\"/>  \n                </center>\n                <Button onClick={()=>{setOpenSignIn(true)}}>Sign In</Button>\n                <Button onClick={()=>{setOpen(true)}}>Sign up</Button>\n              </form>\n            </div>\n          </Modal>)\n            }\n\n                                                {/*widgets*/}\n          <Widgets id={'widget'}/>\n    </div>\n       \n    </div>\n  );\n}\n\nexport default App;\n","/Users/deeptej/Desktop/react/texx/client/src/components/Post.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111"],"/Users/deeptej/Desktop/react/texx/client/src/components/Sidebar.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/firebase.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/Widgets.js",["112"],"import React from 'react'\nimport './Widgets.css'\nimport { Input } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport WidgetsChat from './chat/WidgetsChat'\nimport WigetsDummy from './chat/WigetsDummy'\nimport {useStateValue} from '../contexts/StateProvider'\n\nfunction Widgets() {\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n\n    return (\n        <div className=\"widgets\"> \n            <div className=\"widgets__inputBox\">\n                <SearchIcon className=\"widgets__searchIcon\"/>\n                <Input style={{color:\"aliceblue\"}} className=\"widgets__input\" type= \"text\" placeholder=\"Search Texx\" />\n            </div>\n            <div className=\"widgets___widgetContainer\">\n                {/* if user doesnt exists WidgetsChat component wasthrwoing an error hence I Made a fummy component which doesnt have a user object and \n                will be rendered during refresh transitions when momentarily user is unavailable instead of throwing an error  */}\n                {user?(<WidgetsChat/>):(<WigetsDummy/>)}\n            </div>\n        </div>\n    )\n}\n\nexport default Widgets\n","/Users/deeptej/Desktop/react/texx/client/src/components/ImageUpload.js",["113","114"],"/Users/deeptej/Desktop/react/texx/client/src/components/SidebarOptions.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/chat/Message.js",["115"],"//structure of standard message\nimport React,{ forwardRef } from 'react';//forwardRef keeps track of what is changing\nimport {Card,Avatar,CardContent,Typography} from '@material-ui/core';\nimport './Message.css';\n\n//====================================================================================================\nconst Message =  forwardRef(({},ref) => {\n    //boolean isUser to check whether the user is same as the one logged in \n    // const isUser = username === message.username \n    const isUser = true;\n    return (\n        //apply message__user class only if isUser is True\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\n            {/*if isUser True then apply 'message_userCard' else apply 'message_guestCard'*/}\n            <Card className={isUser ? 'message_userCard': 'message_guestCard' }>\n                <div className=\"message__header\">\n                    <Avatar className=\"message__avatar\" alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                    <Typography className=\"message__username\" variant=\"h\">\n                        {isUser ?`${'You'}`: \"message.username\" || 'Unknown user'}\n                    </Typography>\n                </div>\n                <CardContent>\n                    <Typography className=\"message__message\" color=\"#E6E6E6\" variant=\"h5\" component=\"h2\">\n                        {\"message.message\"}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n        )\n    \n})\n\nexport default Message;","/Users/deeptej/Desktop/react/texx/client/src/components/chat/WidgetsChat.js",["116","117","118","119","120","121"],"\n//users in sidebar chat (online/offline)\n\nimport React, { useEffect, useState } from 'react'\nimport './WidgetsChat.css'\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport {ButtonBase} from '@material-ui/core';\nimport {BrowserRouter, Link} from 'react-router-dom';\nimport {DataBase} from '../firebase'\nimport firebase from 'firebase/app';\nimport {useStateValue} from '../../contexts/StateProvider';\nimport { actionTypes } from '../../contexts/reducer';\nimport { Unsubscribe } from '@material-ui/icons';\n//==================================================Card Styles==============================================\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    minWidth: 250,\n    height:60,\n    background: '#1A1A1A',\n    '&:hover': {\n       background: '#363A3E',\n    },\n    border:'1px grey',\n    marginBottom:'5px',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    Bottom:'20px',\n    fontWeight:300,\n    color: 'white',\n    marginBottom:10,\n  },\n  avatar:{\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    marginTop:10,\n    marginLeft:10,\n    marginBottom:10,\n  },\n  typoStatus:{\n    color:'grey',\n  }\n\n}));\n//==================================================================================================================\nfunction WidgetsChat() {\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n    const classes = useStyles();\n    const [messages, setMessages] = useState([]);\n    const [chats, setChats] = useState([])\n    \n\n    useEffect(() => {\n        //if user is logged out it throws an error hence using try catch\n        try {\n            console.log(\"trying widgetsChat\")\n            \n            console.log(user)\n            //this is not working because the user that is being added to 'users' collection from the App.js signup is not creating a valid document\n            DataBase.collection('users').doc(user.uid).collection('chats').onSnapshot((snapshot)=>(\n                setChats(snapshot.docs.map((doc) => doc.data()))\n               \n            ))\n            console.log(chats)\n     }\n        catch (error) {\n        console.log(error.message+\" coming from widgetsChat getting 'chats'collection \")\n        }\n        \n    }, [user]);\n\n    return (\n//==========================================Online members===========================================================\n        <div className=\"widgetsChat\">\n            <div className=\"widgetsChat__online\">\n                 <p>Online<span><Badge color=\"primary\" overlap=\"circle\"  variant=\"dot\"></Badge></span></p>\n                 <div className=\"widgetsChat__onlineMembers\">\n            {\n                chats.map((chat)=>(\n                <BrowserRouter>\n                            <Link to={`/chats/${chat.chat_user_id}`} key={chat.chat_user_id} onClick={   \n                                ()=>{ //dispatch the chat_user_id when the user clicks on the Link, to the global state\n                                      //later used in App.js to render <SendMessage> and pass 'chatId' to SendMessage\n                                          dispatch(\n                                                        {\n                                                        type:actionTypes.SET_CHAT_INPUT,\n                                                        chatId:chat.chat_user_id,\n                                                        chatInput:true,\n                                                        \n                                                        })}}>\n                                    <ButtonBase>\n                                        <Card className={classes.root}>\n                                                <Avatar className={classes.avatar} alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                                                    <Badge\n                                                        overlap=\"circle\"\n                                                        anchorOrigin={{\n                                                        vertical: 'bottom',\n                                                        horizontal: 'right',\n                                                        }}\n                                                       \n                                                    ></Badge>\n                                                <div className={classes.details}>\n                                                        <CardContent className={classes.content}>\n                                                            <Typography component=\"p\" variant=\"p\">\n                                                                {chat.chat_username}\n                                                            </Typography>\n                                                            <Typography className={classes.typoStatus} variant=\"caption\">\n                                                                status like I am using texx\n                                                            </Typography>\n                                                        </CardContent>\n                                                </div>\n                                        </Card>\n                                    </ButtonBase>\n                            </Link>\n                </BrowserRouter>\n                \n                ))\n            }\n                 \n                 </div>\n            </div>\n                                                        {/* offline members */}\n            <div className=\"widgetsChat__offline\">\n                 <p>Offline<span><Badge color=\"secondary\" overlap=\"circle\"  variant=\"dot\"></Badge></span></p> \n                 <div className=\"widgetsChat__offlineMembers\">\n                 <ButtonBase>\n                    <Card className={classes.root}>\n                            <Avatar className={classes.avatar} alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                            <div className={classes.details}>\n                                    <CardContent className={classes.content}>\n                                        <Typography component=\"p\" variant=\"p\">\n                                            User\n                                        </Typography>\n                                        <Typography className={classes.typoStatus} variant=\"caption\">\n                                            status\n                                        </Typography>\n                                    </CardContent>\n                            </div>\n                        </Card>\n                    </ButtonBase>\n                    <ButtonBase>\n                        <Card className={classes.root}>\n                            <Avatar className={classes.avatar} alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                            <div className={classes.details}>\n                                    <CardContent className={classes.content}>\n                                        <Typography component=\"p\" variant=\"p\">\n                                            User\n                                        </Typography>\n                                        <Typography className={classes.typoStatus} variant=\"caption\">\n                                            status\n                                        </Typography>\n                                    </CardContent>\n                            </div>\n                        </Card>\n                    </ButtonBase>\n                    <ButtonBase>\n                        <Card className={classes.root}>\n                            <Avatar className={classes.avatar} alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                            <div className={classes.details}>\n                                    <CardContent className={classes.content}>\n                                        <Typography component=\"p\" variant=\"p\">\n                                            User\n                                        </Typography>\n                                        <Typography className={classes.typoStatus} variant=\"caption\">\n                                            status\n                                        </Typography>\n                                    </CardContent>\n                            </div>\n                        </Card>\n                    </ButtonBase>\n                    <ButtonBase>\n                        <Card className={classes.root}>\n                            <Avatar className={classes.avatar} alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                            <div className={classes.details}>\n                                    <CardContent className={classes.content}>\n                                        <Typography component=\"p\" variant=\"p\">\n                                            User\n                                        </Typography>\n                                        <Typography className={classes.typoStatus} variant=\"caption\">\n                                            status\n                                        </Typography>\n                                    </CardContent>\n                            </div>\n                        </Card>\n                    </ButtonBase>\n                    <ButtonBase>\n                        <Card className={classes.root}>\n                            <Avatar className={classes.avatar} alt={'d'} src=\"/static/images/avatar/1.jpg\"></Avatar>\n                            <div className={classes.details}>\n                                    <CardContent className={classes.content}>\n                                        <Typography component=\"p\" variant=\"p\">\n                                            User\n                                        </Typography>\n                                        <Typography className={classes.typoStatus} variant=\"caption\">\n                                            status\n                                        </Typography>\n                                    </CardContent>\n                            </div>\n                        </Card>\n                    </ButtonBase>\n                 </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WidgetsChat\n","/Users/deeptej/Desktop/react/texx/client/src/components/Feed.js",["122","123"],"/Users/deeptej/Desktop/react/texx/client/src/components/chat/Chat.js",["124","125","126","127","128"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport Message from './Message'\nimport './Chat.css'\nimport {DataBase} from '../firebase';\nimport {useStateValue} from '../../contexts/StateProvider';\n\n\n\nfunction Chat() {\n    //set the chat name in the\n    const [chatName,setChatName] = useState('')\n    //get the messages from the database\n    const [messages,setMessages] = useState([])\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n    const {chatId} = useParams()\n\n\n\n//======================================================GET Messages==========================================\n//everytime chat_user_id (which is basically the doc id inside the chat collection) changes pull the messages for that chat_user_id from the database\nuseEffect(() => {\n    if (user){\n    if (chatId){\n        //here the chat_user_id is taken from the user who posted that particular post to database\n        const unsubscribe = DataBase.collection('users').doc(user.uid).collection('chats').doc(chatId).collection('messages').onSnapshot((snapshot)=>(\n            setMessages(snapshot.data())\n        ))\n    }\n}\n    \n}, [chatId])\n\n\n//=============================================================================================================\n\n    return (                         \n             <div className=\"chat\">\n                <div className=\"chat__header\">\n                This is the beggining of your texx with {}\n                </div>\n                {\n                    messages.map((message)=>(<Message message={message}/>))\n                    \n                }\n             </div> \n\n\n    )\n}\n\nexport default Chat\n","/Users/deeptej/Desktop/react/texx/client/src/contexts/StateProvider.js",[],"/Users/deeptej/Desktop/react/texx/client/src/contexts/reducer.js",[],"/Users/deeptej/Desktop/react/texx/client/src/components/chat/WigetsDummy.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"\n//users in sidebar chat (online/offline)\n\nimport React, { useEffect, useState } from 'react'\nimport './WidgetsDummy.css'\nimport Badge from '@material-ui/core/Badge';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport {ButtonBase} from '@material-ui/core';\nimport {Link} from 'react-router-dom';\nimport {DataBase} from '../firebase'\nimport firebase from 'firebase/app';\nimport {useStateValue} from '../../contexts/StateProvider';\nimport { Unsubscribe } from '@material-ui/icons';\n//==================================================Card Styles==============================================\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    minWidth: 250,\n    height:60,\n    background: '#1A1A1A',\n    '&:hover': {\n       background: '#363A3E',\n    },\n    border:'1px grey',\n    marginBottom:'5px',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    Bottom:'20px',\n    fontWeight:300,\n    color: 'white',\n    marginBottom:10,\n  },\n  avatar:{\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n    marginTop:10,\n    marginLeft:10,\n    marginBottom:10,\n  },\n  typoStatus:{\n    color:'grey',\n  }\n\n}));\n//==================================================================================================================\nfunction WidgetsDummy() {\n\n    return (\n\n        <div className=\"widgetsChat\">\n            \n        </div>\n    )\n}\n\nexport default WidgetsDummy\n","/Users/deeptej/Desktop/react/texx/client/src/components/chat/SendMessage.js",["144","145"],"import React, { useState } from 'react'\nimport { Input } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport firebase from 'firebase/app'\nimport {useStateValue} from '../../contexts/StateProvider';\nimport {InsertEmoticon, MicOutlined} from '@material-ui/icons';\nimport {DataBase} from '../firebase';\nimport { useParams } from 'react-router-dom';\nimport './SendMessage.css'\n\nfunction SendMessage(chatId) {\n    //get the user from the provider  \n    const [{user}, dispatch] = useStateValue();\n    //set the input \n    const [input, setInput] = useState('');\n  \n//========================================================POST Messages========================================\n\n\n    const sendMessage = () => {\n        if (user){\n            DataBase.collection('users').doc(user.uid).collection('chats').doc(chatId).collection('messages').add(\n                {\n                    text:input,\n                    timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n                    author:user.uid,\n                    authorName:user.displayName,\n                    imageUrl:\"\",\n                }\n            )\n            setInput('');\n        }\n    }\n\n//=============================================================================================================\n    return (\n    <div className=\"sendMessage\">\n            <form className=\"chat__inputForm\" onSubmit={(e)=>{e.preventDefault()}}>\n                <InsertEmoticon/>\n                <Input style={{color:\"aliceblue\"}} className=\"sendMessage__input\" value={input} onChange={(e)=>setInput(e.target.value)} type=\"text\" placeholder=\"   Send a texx...\"/>\n                <SendIcon onClick={sendMessage} type=\"submit\"/>\n                <MicOutlined/>\n            </form>\n    </div>\n    )\n}\n\nexport default SendMessage\n","/Users/deeptej/Desktop/react/texx/client/src/components/Event.js",["146"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport './Event.css'\nimport { Paper } from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor:\"#2E3336\",\n  },\n  media: {\n    height: 140,\n  },\n});\nfunction Event() {\n    const classes = useStyles();\n    return (\n        <div className=\"event\">\n            <div className=\"event__header\">\n                <div className=\"event__headerInfo\">\n                    <Typography className=\"event__title\"  variant=\"h5\">\n                        {\"Event Title\"}\n                    </Typography>\n                    <Typography  className=\"event__date\">\n                        {\"Date\"}\n                    </Typography>\n                    <Typography  className=\"event__time\">\n                        {\"Time\"}\n                    </Typography>\n                    <Typography  className=\"event__location\">\n                        {\"Location/Link\"}\n                    </Typography>\n                </div>\n                <MoreVertIcon style={{color:'white'}}/>\n            </div>\n            <Card className={classes.root}>\n\n                <div className=\"event__thubnail\">\n                    <CardActionArea>\n                        <CardMedia\n                        className={classes.media}\n                        image={\"Event Image\"}\n                        title={\"Event Title\"}\n                        />\n                    </CardActionArea>\n                </div>\n\n                <CardContent className=\"event__description\">\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {\"Event short description\"}\n                    </Typography>\n                </CardContent>\n\n                <div className=\"event__footer\">\n                    <CardActions className=\"event__interested\">\n                        <Button size=\"small\" >    \n                                I am Interested\n                        </Button>\n                    </CardActions>\n    \n                    <CardActions className=\"event__actions\">\n                            <Button size=\"small\" onClick={() => {\n                                            if (navigator.share) {\n                                                navigator.share({\n                                                        title: document.title,\n                                                        text: \"Event short description\",\n                                                        url: window.location.href,\n                                                    })\n                                                    .then(() => console.log('Successful share'))\n                                                    .catch((error) => alert('Error sharing', error));\n                                            } else {\n                                                alert(\"Web Share API is not supported in your browser.\")\n                                            }\n                                        }} >\n                            Share with friends\n                            </Button>\n                            <Button size=\"small\" >\n                            Learn More\n                            </Button>\n                    </CardActions>\n                </div>\n            </Card>\n        </div>\n    )\n}\n\nexport default Event\n\n\n","/Users/deeptej/Desktop/react/texx/client/src/components/Profile.js",["147","148","149","150","151","152","153","154","155","156","157"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport './Profile.css'\nimport { Button } from '@material-ui/core';\n\n\n\n\n\n\n\n{/* <Avatar/>\n<displayName/>\n<>\n<Joined on/> */}\n\n\n\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar:{\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        marginTop:10,\n        marginLeft:10,\n        marginBottom:10,\n        marginRight:10,\n      },\n}));\n\nfunction Profile() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n    return (\n        <div className=\"profile\">\n                <Card className=\"profile__card\" elevation={8}>\n                    <div className=\"profile__header\">\n                        <div className=\"profile__headerTop\">\n                                <Avatar className={classes.avatar} alt={'username'} src=\"/static/images/avatar/1.jpg\" ></Avatar>\n                                <div className=\"profle__headerInfo\">\n                                    <Typography>{'username'}</Typography>\n                                    <Typography>{`Joined on \" + ${'Joining date'}`}</Typography>\n                                </div>\n                            <IconButton aria-label=\"settings\">\n                                <MoreVertIcon />\n                            </IconButton>\n                            \n                        </div>\n                        <center className=\"profile__headerEditButton\"><Button >Edit Profile</Button></center>\n                        <div className=\"profile__headerTypography\">\n                            <Typography>Biography</Typography>\n                            <Typography>Interests</Typography>\n                        </div>\n                    </div>\n                    <div className=\"profile__footer\">\n                    <CardContent>\n                        <Typography variant=\"h5\">\n                            STATS\n                        </Typography>\n                        <div className=\"profile__footerStats\">\n                            <div className=\"profile__footerStatsPosts\">\n                                <Typography variant=\"body2\" >\n                                    POSTS\n                                </Typography>\n                                <p>{'no. of posts'}</p>\n                            </div>\n                            <div className=\"profile__footerStatsEvents\">\n                                <Typography variant=\"body2\" >\n                                    EVENTS\n                                </Typography>\n                                <p>{'no. of events took part in '}</p>\n                            </div>\n                            <div className=\"profile__footerStatsFriends\">\n                                <Typography variant=\"body2\" >\n                                    NEW FRIENDS\n                                </Typography>\n                                <p>{'no. of friends'}</p>\n                            </div>\n                        </div>\n                    </CardContent>\n                    </div>\n                    </Card>\n        </div>\n    )\n}\n\nexport default Profile\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":27,"column":8,"nodeType":"164","messageId":"165","endLine":27,"endColumn":13},{"ruleId":"162","severity":1,"message":"166","line":28,"column":8,"nodeType":"164","messageId":"165","endLine":28,"endColumn":15},{"ruleId":"167","severity":1,"message":"168","line":92,"column":28,"nodeType":"169","endLine":92,"endColumn":56},{"ruleId":"162","severity":1,"message":"170","line":3,"column":36,"nodeType":"164","messageId":"165","endLine":3,"endColumn":46},{"ruleId":"162","severity":1,"message":"171","line":12,"column":8,"nodeType":"164","messageId":"165","endLine":12,"endColumn":19},{"ruleId":"162","severity":1,"message":"172","line":36,"column":20,"nodeType":"164","messageId":"165","endLine":36,"endColumn":28},{"ruleId":"162","severity":1,"message":"173","line":46,"column":12,"nodeType":"164","messageId":"165","endLine":46,"endColumn":27},{"ruleId":"162","severity":1,"message":"174","line":46,"column":29,"nodeType":"164","messageId":"165","endLine":46,"endColumn":47},{"ruleId":"162","severity":1,"message":"175","line":48,"column":12,"nodeType":"164","messageId":"165","endLine":48,"endColumn":25},{"ruleId":"162","severity":1,"message":"176","line":48,"column":26,"nodeType":"164","messageId":"165","endLine":48,"endColumn":42},{"ruleId":"162","severity":1,"message":"177","line":49,"column":12,"nodeType":"164","messageId":"165","endLine":49,"endColumn":21},{"ruleId":"162","severity":1,"message":"178","line":49,"column":22,"nodeType":"164","messageId":"165","endLine":49,"endColumn":34},{"ruleId":"162","severity":1,"message":"179","line":60,"column":12,"nodeType":"164","messageId":"165","endLine":60,"endColumn":21},{"ruleId":"162","severity":1,"message":"180","line":60,"column":22,"nodeType":"164","messageId":"165","endLine":60,"endColumn":34},{"ruleId":"162","severity":1,"message":"181","line":82,"column":13,"nodeType":"164","messageId":"165","endLine":82,"endColumn":32},{"ruleId":"182","severity":1,"message":"183","line":160,"column":3,"nodeType":"184","messageId":"185","endLine":160,"endColumn":18},{"ruleId":"167","severity":1,"message":"186","line":199,"column":11,"nodeType":"184","endLine":199,"endColumn":31,"suggestions":"187"},{"ruleId":"182","severity":1,"message":"183","line":199,"column":11,"nodeType":"184","messageId":"185","endLine":199,"endColumn":31},{"ruleId":"188","severity":1,"message":"189","line":268,"column":53,"nodeType":"190","messageId":"191","endLine":268,"endColumn":55},{"ruleId":"167","severity":1,"message":"192","line":294,"column":3,"nodeType":"184","endLine":294,"endColumn":17,"suggestions":"193"},{"ruleId":"182","severity":1,"message":"183","line":294,"column":3,"nodeType":"184","messageId":"185","endLine":294,"endColumn":17},{"ruleId":"188","severity":1,"message":"189","line":337,"column":36,"nodeType":"190","messageId":"191","endLine":337,"endColumn":38},{"ruleId":"162","severity":1,"message":"172","line":11,"column":20,"nodeType":"164","messageId":"165","endLine":11,"endColumn":28},{"ruleId":"162","severity":1,"message":"170","line":1,"column":24,"nodeType":"164","messageId":"165","endLine":1,"endColumn":34},{"ruleId":"162","severity":1,"message":"172","line":13,"column":20,"nodeType":"164","messageId":"165","endLine":13,"endColumn":28},{"ruleId":"194","severity":1,"message":"195","line":7,"column":30,"nodeType":"196","messageId":"191","endLine":7,"endColumn":32},{"ruleId":"162","severity":1,"message":"197","line":7,"column":22,"nodeType":"164","messageId":"165","endLine":7,"endColumn":30},{"ruleId":"162","severity":1,"message":"198","line":15,"column":8,"nodeType":"164","messageId":"165","endLine":15,"endColumn":16},{"ruleId":"162","severity":1,"message":"199","line":18,"column":10,"nodeType":"164","messageId":"165","endLine":18,"endColumn":21},{"ruleId":"162","severity":1,"message":"200","line":59,"column":12,"nodeType":"164","messageId":"165","endLine":59,"endColumn":20},{"ruleId":"162","severity":1,"message":"201","line":59,"column":22,"nodeType":"164","messageId":"165","endLine":59,"endColumn":33},{"ruleId":"167","severity":1,"message":"202","line":80,"column":8,"nodeType":"184","endLine":80,"endColumn":14,"suggestions":"203"},{"ruleId":"162","severity":1,"message":"204","line":10,"column":9,"nodeType":"164","messageId":"165","endLine":10,"endColumn":13},{"ruleId":"162","severity":1,"message":"172","line":10,"column":16,"nodeType":"164","messageId":"165","endLine":10,"endColumn":24},{"ruleId":"162","severity":1,"message":"205","line":12,"column":12,"nodeType":"164","messageId":"165","endLine":12,"endColumn":20},{"ruleId":"162","severity":1,"message":"206","line":12,"column":21,"nodeType":"164","messageId":"165","endLine":12,"endColumn":32},{"ruleId":"162","severity":1,"message":"172","line":16,"column":20,"nodeType":"164","messageId":"165","endLine":16,"endColumn":28},{"ruleId":"162","severity":1,"message":"207","line":27,"column":15,"nodeType":"164","messageId":"165","endLine":27,"endColumn":26},{"ruleId":"167","severity":1,"message":"208","line":33,"column":4,"nodeType":"184","endLine":33,"endColumn":12,"suggestions":"209"},{"ruleId":"162","severity":1,"message":"210","line":4,"column":17,"nodeType":"164","messageId":"165","endLine":4,"endColumn":26},{"ruleId":"162","severity":1,"message":"211","line":4,"column":28,"nodeType":"164","messageId":"165","endLine":4,"endColumn":36},{"ruleId":"162","severity":1,"message":"212","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":13},{"ruleId":"162","severity":1,"message":"197","line":7,"column":22,"nodeType":"164","messageId":"165","endLine":7,"endColumn":30},{"ruleId":"162","severity":1,"message":"213","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":12},{"ruleId":"162","severity":1,"message":"214","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":19},{"ruleId":"162","severity":1,"message":"215","line":10,"column":8,"nodeType":"164","messageId":"165","endLine":10,"endColumn":18},{"ruleId":"162","severity":1,"message":"216","line":11,"column":8,"nodeType":"164","messageId":"165","endLine":11,"endColumn":14},{"ruleId":"162","severity":1,"message":"217","line":12,"column":9,"nodeType":"164","messageId":"165","endLine":12,"endColumn":19},{"ruleId":"162","severity":1,"message":"218","line":13,"column":9,"nodeType":"164","messageId":"165","endLine":13,"endColumn":13},{"ruleId":"162","severity":1,"message":"219","line":14,"column":9,"nodeType":"164","messageId":"165","endLine":14,"endColumn":17},{"ruleId":"162","severity":1,"message":"198","line":15,"column":8,"nodeType":"164","messageId":"165","endLine":15,"endColumn":16},{"ruleId":"162","severity":1,"message":"220","line":16,"column":9,"nodeType":"164","messageId":"165","endLine":16,"endColumn":22},{"ruleId":"162","severity":1,"message":"199","line":17,"column":10,"nodeType":"164","messageId":"165","endLine":17,"endColumn":21},{"ruleId":"162","severity":1,"message":"221","line":19,"column":7,"nodeType":"164","messageId":"165","endLine":19,"endColumn":16},{"ruleId":"162","severity":1,"message":"222","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":19},{"ruleId":"162","severity":1,"message":"172","line":13,"column":20,"nodeType":"164","messageId":"165","endLine":13,"endColumn":28},{"ruleId":"162","severity":1,"message":"223","line":11,"column":10,"nodeType":"164","messageId":"165","endLine":11,"endColumn":15},{"ruleId":"162","severity":1,"message":"224","line":3,"column":8,"nodeType":"164","messageId":"165","endLine":3,"endColumn":12},{"ruleId":"162","severity":1,"message":"225","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":18},{"ruleId":"162","severity":1,"message":"226","line":6,"column":8,"nodeType":"164","messageId":"165","endLine":6,"endColumn":17},{"ruleId":"162","severity":1,"message":"227","line":8,"column":8,"nodeType":"164","messageId":"165","endLine":8,"endColumn":19},{"ruleId":"162","severity":1,"message":"228","line":9,"column":8,"nodeType":"164","messageId":"165","endLine":9,"endColumn":16},{"ruleId":"162","severity":1,"message":"229","line":13,"column":10,"nodeType":"164","messageId":"165","endLine":13,"endColumn":13},{"ruleId":"162","severity":1,"message":"230","line":14,"column":8,"nodeType":"164","messageId":"165","endLine":14,"endColumn":20},{"ruleId":"162","severity":1,"message":"231","line":15,"column":8,"nodeType":"164","messageId":"165","endLine":15,"endColumn":17},{"ruleId":"162","severity":1,"message":"232","line":16,"column":8,"nodeType":"164","messageId":"165","endLine":16,"endColumn":22},{"ruleId":"233","severity":1,"message":"234","line":27,"column":1,"nodeType":"235","messageId":"236","endLine":30,"endColumn":17},{"ruleId":"162","severity":1,"message":"237","line":68,"column":9,"nodeType":"164","messageId":"165","endLine":68,"endColumn":26},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"no-unused-vars","'Event' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'userFromLocalStorage' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useContext' is defined but never used.","'PublishIcon' is defined but never used.","'dispatch' is assigned a value but never used.","'favouritesColor' is assigned a value but never used.","'setfavouritesColor' is assigned a value but never used.","'firstTimeLike' is assigned a value but never used.","'setFirstTimeLike' is assigned a value but never used.","'likeColor' is assigned a value but never used.","'setLikeColor' is assigned a value but never used.","'likeCount' is assigned a value but never used.","'setLikeCount' is assigned a value but never used.","'checkLengthOfObject' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","React Hook useEffect has missing dependencies: 'chats_array' and 'user_id'. Either include them or remove the dependency array. If 'setIsPresent' needs the current value of 'user_id', you can also switch to useReducer instead of useState and read 'user_id' in the reducer.",["240"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'like' and 'likes'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLike' needs the current value of 'likes'.",["241"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'useTheme' is defined but never used.","'firebase' is defined but never used.","'Unsubscribe' is defined but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chats'. Either include it or remove the dependency array.",["242"],"'user' is assigned a value but never used.","'chatName' is assigned a value but never used.","'setChatName' is assigned a value but never used.","'unsubscribe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["243"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Badge' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.","'ButtonBase' is defined but never used.","'Link' is defined but never used.","'DataBase' is defined but never used.","'useStateValue' is defined but never used.","'useStyles' is assigned a value but never used.","'useParams' is defined but never used.","'Paper' is defined but never used.","'clsx' is defined but never used.","'CardHeader' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'red' is defined but never used.","'FavoriteIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'handleExpandClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [postId, chats, user, user_id, chats_array]",{"range":"252","text":"253"},"Update the dependencies array to be: [like, likes, postId, user]",{"range":"254","text":"255"},"Update the dependencies array to be: [chats, user]",{"range":"256","text":"257"},"Update the dependencies array to be: [chatId, user]",{"range":"258","text":"259"},[8563,8583],"[postId, chats, user, user_id, chats_array]",[13126,13140],"[like, likes, postId, user]",[2545,2551],"[chats, user]",[1187,1195],"[chatId, user]"]